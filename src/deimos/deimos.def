/* -*- C -*- */
/** ---------------------------------------------------------------------------
 * @file   deimos.def
 * @brief  DEIMOS definition file; user macros to be used within Archon files
 *                                 i.e. within the .script, .states, .cds, or .modules files
 * 
 * Use #define to define macros; syntax is case sensitive.
 * By convention macros will be capitalized and will start with an underscore
 *      ex. _SW_SLEW_SLOW for setting slow slew rate of the summing well
 */

 /** --------------------------------------------------------------------------
 * Configuration modes
 */

#define _SCI_SER_CLOCK_DIR       SPLIT   /* SPLIT || E_LEFT || F_RIGHT */


 /** --------------------------------------------------------------------------
 * Archon Configuration Details
 */

#define _ARCHON_SAMPLE_MODE        1 /* 0=16bit, 1=32bit                    */
#define _ARCHON_FRAMEMODE          2 /* 0=top, 1=bottom, 2=split            */
#define _ARCHON_FRAMEBUFS          0 /* 0=3x512MB, 1=2x768MB, I.E. "BIGBUF" */

#define _RAW_ENABLE                0 /* 0=no, 1=yes                         */
#define _RAW_STARTLINE             0 /* first line of raw data, 0-65535     */
#define _RAW_ENDLINE              10 /* last line of raw data, 0-65535      */
#define _RAW_STARTPIXEL           50
#define _RAW_SAMPLES            2000
#define _RAW_SELECT                7 /* AD channel for raw data capture, 0-15 */

 /** ---------------------------------------------------------------------------
 * Detector Array Parameters
 */

#define _SECTION_A_ROWS         2056
#define _SECTION_B_ROWS         2048

#define _IMAGECOLS              2048
#define _AMPCOLS                #eval _IMAGECOLS / 2
#define _IMAGEROWS              #eval _SECTION_A_ROWS + _SECTION_B_ROWS

/* #define _CDS_WIDTH            10  /* width of each CDS integration component in clocks */
#define  _SERIALPRESCAN           50
#define  _SERIALOVERSCAN         100 
#define  _PARALLELOVERSCAN        50

#define _AMPREADCOLS            #eval _AMPCOLS + _SERIALPRESCAN


/* Number of Pixels depends on if both output
#if _SCI_SER_CLOCK_DIR == SPLIT
   #define _PIXELNUM          #eval _IMAGECOLS/2 + _SERIALPRESCAN + _SERIALOVERSCAN
#endif
#if _SCI_SER_CLOCK_DIR == F_RIGHT || _SCI_SER_CLOCK_DIR == E_LEFT
   #define _PIXELNUM          #eval _IMAGECOLS + _SERIALPRESCAN + _SERIALOVERSCAN
#endif




 /** ---------------------------------------------------------------------------
 * CDS-Deinterlace options
 */

#define Pixel_T       100 /* Full pixel time : 10s of ns */

/* TODO CLARIFY VLAYES FOR RG AND SW settling time */
#define RG_settleT    17 /*32*/  /* Settling Time for the reset gate 310ns */ /* Static */ /* Used in CDS Window calculation */ /* Shifted to 1 less from previous */
#define SW_settleT    16 /*32*/  /* Settling Time for charge dump    310ns */ /* Static */ /* Used in CDS Window calculation */ /* Shifted to 1 less from previous */

#define _FIRST_RESET_SAMPLE      #eval RG_settleT                 /* Start Reset sample after reset settling time                    */
#define _LAST_RESET_SAMPLE       #eval Pixel_T/2 - 1              /* Half of the pixel time to reset pedestal                        */
#define _FIRST_VIDEO_SAMPLE      #eval Pixel_T/2 - 1 + SW_settleT /* Start video sample after reset pedestal and summing well settle */
#define _LAST_VIDEO_SAMPLE       #eval Pixel_T - 2                /* Stop video sample at end of pixel time                          */

#define CDS_RESET_LENGTH   1
#define CDS_SIGNAL_LENGTH  1
#define COINC_SW_DELAY 1
#define COINC_SCLK_LAST_DELAY 1


/** basic constants to assist in somewhat automating slew rate for triange clocking.
    For now we are just entering a slew time manually, then calculating the rate to make
    sure we hit the intended voltage at the top of the triangle waveform **/

#define PAR_SLEW_TIME_US           15
#define SER_SLEW_TIME_US           1


//NOTE archon slew rates are defined in Volts per microsecond, NOT in volts per Archon clock tick
#define PAR_SLEW_RATE           #eval (_PAR_CLOCK_HIGH - _PAR_CLOCK_LOW) / PAR_SLEW_TIME_US
#define SER_SLEW_RATE           #eval (_SER_CLOCK_HIGH - _SER_CLOCK_LOW)  / SER_SLEW_TIME_US

